complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
read_csv('geostat-2011/GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
dir()
read_csv('geostat-2011/GEOSTAT_grid_POP_1K_2011_V2_0_1.csv')
read_csv('./geostat-2011/GEOSTAT_grid_POP_1K_2011_V2_0_1.csv')
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv')
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv')
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv')
?
asdf0
=
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv')
)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv')) %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv')) %>%
mutate(TOT_P_CON_DT=''))
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT=''))
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup()
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE)
library(tidyr)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
library(ggplot2)
read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
filter(lng > 25, lng < 60) %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
ungroup() %>%
complete(lat, lng) %>%
ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
ggthemes::theme_map() +
coord_equal(0.9)
1+1
"+"(x=1,y=2)
"+"(x=1,y=1)
11 %% 2
10 %/% 2
1>2
1!=2
1 %in% c(1,2,3)
4 %in% c(1,2,3)
b<-c("Hund", "Katze", "Maus")
a
a<-c(1,2,3,4)
b<-c("Hund", "Katze", "Maus")
b
c<-rep(1,10)
c
c<-rep("Katze")
c
c<-rep("Katze",10)
c
d<-1:10
e<-seq(1,5,0.1)
e
e<-0:2:10
e<-0:2:10
e<-0:10
e<-seq(1,5,0.1)
e
e<-seq(5,0,0.1)
e<-seq(from=5,to=0,by=0.1)
e<-seq(from=5,to=0,by=-0.1)
e
g<-rev(f)
g
g<-rev(x = f)
f<-seq(from=5,to=0,by=-0.1)
g<-rev(x = f)
g
f<-seq(from=5,to=0,by=-0.1)
f
g<-rev(x = f)
g
sort(c(1,3,-5,42))
sort(c(-7,1,3,-5,42))
sort(c(-7,1,3,-5,42), decreasing = T)
sort(c(-7,1,3,-5,42), decreasing = TRUE)
a<-10.123
a
b<-42L
b
b<-as.integer(42)
c<-"schwarze Katze"
c
d<-c("Hund", "Hund", "Katze", "Maus")
d
d<-as.factor(c("Hund", "Hund", "Katze", "Maus"))
d
as.numeric(d)
is.numeric(d)
is.factor(d)
11%%2
c<-1:10
a<-1:10
b<-as.matrix(a, byrow=T)
b
b<-as.matrix(a, nrows=2)
b
b<-as.matrix(a, nrows=2)
b<-as.matrix(a, nrows=2, bycol=T)
b
b<-matrix(a, nrows=2, bycol=T)
b<-matrix(a, nrows=2, byrow=T)
b<-matrix(a, nrow=2, byrow=T)
b
b<-matrix(a, nrow=2, byrow=T)
b<-matrix(a, nrow=3, byrow=T)
b<-matrix(a, nrow=4, byrow=T)
a<-1:12
b<-matrix(a, nrow=4, byrow=T)
b
b<-matrix(a, nrow=4, byrow=F)
b
a==b
a<-TRUE
b<-F
a==b
a<-TRUE
b<-T
a==b
1>2
1>=2
1<=2
1 %in% c(1,2,3)     # in
4 %in% c(1,2,3)     # in
!1 %in% c(1,2,3)    # Not in
c<-matrix(a, nrow=4, byrow=F)
c
a<-1:12
b<-matrix(a, nrow=4, byrow=T)
c<-matrix(a, nrow=4, byrow=F)
c
t(c)
inverse.gaussian(c)
c<-matrix(a, nrow=4, byrow=F)
c
b<-matrix(a, nrow=4, byrow=T)
colnames(b)<-c()
colnames(b)<-c("Hund", "Katze", "Maus")
b
rownames(b)<-c("Hal", "lo", "We", "lt")
b
df<-as.data.frame(b)
df
df$Doppelmaus<-df$Maus*2
df
print("Hallo Welt")
print(paste(Sys.Date, "ist ein wunderschöner Tag"))
Sys.Date
print(paste(Sys.Date(), "ist ein wunderschöner Tag"))
as.character(Sys.Date(),format="%y%m")
format((Sys.Date(), format="%B %d %Y")
today <- Sys.Date()
format(today, format="%B %d %Y")
print(paste(format(Sys.Date(), format="%B %d %Y")))
myprint=function(text)
{
print(text)
retrun("Printed your text")
}
myprint("Hallo")
myprint=function(text)
{
print(text)
return("Printed your text")
}
myprint("Hallo")
myprint=function(text)
{
print(text)
return("Printed your text")
}
a<-myprint("Hallo")
a
myprint=function(text)
{
print(text)
return("Rückgabe von myprint")
}
a<-myprint("Hallo")
a
######## Pipes ############################
# ..............................MMMMMMMMMMM
# .........O..................MMMMM.     DX
# ........OOO................MMM
# .........O...............MMMM
# ........................MMMMM
# .....MMMMMMMMM........MMMMMM
# ......MMMMMMMMM.....OMMMMMM
# ......MMMMMMMMMM...MMMMMMM
# ......MMMMMMMMMMMMMMMMMMMM
# ......MMMMMMMMMMMMMMMMMMM.
# .......MMMMMMMMMMMMMMMMMM
# .......MMMMMMMMMMMMMMMMM
# .......MMMMMMMMMMMMMMMM
# .......,MMMMMMMMMMMMMM
# .........MMMMMMMMMMMM
# ...........MMMMMMM
library(magrittr)
Sys.Date()
Sys.Date()%>%format( format="%B %d %Y")
Sys.Date()%>%
format( format="%B %d %Y") %>%
paste()
library(magrittr)
Sys.Date()%>%
format( format="%B %d %Y") %>%
paste("Heute")
paste("Heute")%>>%
Sys.Date()%>%
format( format="%B %d %Y")
Sys.Date()%>%
format( format="%B %d %Y") %>%
paste("ist ein toller Tag")
Sys.Date()%>%
format( format="%d %m %Y") %>%
paste("ist ein toller Tag")
Sys.Date()%>%
format( format="%d.%m.%Y") %>%
paste("ist ein toller Tag")
Sys.Date()%>%
format( format="%d.%m.%Y") %>%
paste("ist ein toller Tag") %>%
print
a<-Sys.Date()%>%
format( format="%d.%m.%Y") %>%
paste("ist ein toller Tag") %>%
print
a<-Sys.Date()%>%
format( format="%d.%m.%Y") %>%
paste("ist ein toller Tag")
a<-Sys.Date()%>%
format( format="%d.%m.%Y") %>%
paste("ist ein toller Tag") %>%
print
a
print("Hallo Welt")
library(ggplot2)
getwd()
setwd("c:/work/itzza")
write.table(x = diamonds, file="diamonds.csv")
write.table(x = diamonds, file="diamonds.csv", sep=";")
diamonds2<-read.table(x = diamonds, file="diamonds.csv", sep=";")
diamonds2<-read.table(file="diamonds.csv", sep=";")
diamonds2
str(diamonds2)
diamonds2<-read.table(file="diamonds.csv", sep=";", stringsAsFactors = FALSE)
str(diamonds3)
diamonds3<-read.table(file="diamonds.csv", sep=";", stringsAsFactors = FALSE)
str(diamonds3)
write.foreign(df=test.df, datafile="test.csv", codefile="test.sas", package="SAS")
install.packages("foreign")
library(foreign)
write.foreign(df=test.df, datafile="test.csv", codefile="test.sas", package="SAS")
write.foreign(df=diamonds, datafile="test.csv", codefile="test.sas", package="SAS")
write.foreign(df=diamonds, datafile="diamonds_sas.csv", codefile="diamonds_sas.sas", package="SAS")
rm(c("diamonds_sas.csv","diamonds_sas.sas"))
c("diamonds_sas.csv","diamonds_sas.sas")
rm(c("diamonds_sas.csv","diamonds_sas.sas"))
rm("diamonds_sas.csv")
rm(list("diamonds_sas.csv"))
farbe<-"#fd9602"
farbe<-"#fd9602"
barplot(1:10, col=farbe)
pal <- colorRampPalette(c("orange", "light gray", "red"))(numcols)
numcols<-100
pal <- colorRampPalette(c("orange", "light gray", "red"))(numcols)
numcols<-100
palette <- colorRampPalette(c("orange", "light gray", "red"))(numcols)
barplot(1:numcols, col=palette)
barplot(1:numcols*2, col=palette)
barplot(1:numcols*2, col=palette)
barplot(1:(numcols*2), col=palette)
barplot(1:(numcols*2), col=palette, border = F)
red
palette <- colorRampPalette(c("blue", "ligtht gray", "red"))(numcols)
barplot(1:numcols, col=palette)
barplot(1:(numcols*2), col=palette, border = F)
numcols<-100
palette <- colorRampPalette(c("blue", "ligtht gray", "red"))(numcols)
barplot(1:numcols, col=palette)
barplot(1:(numcols*2), col=palette, border = F)
palette <- colorRampPalette(c("blue", "light gray", "red"))(numcols)
barplot(1:numcols, col=palette)
barplot(1:(numcols*2), col=palette, border = F)
barplot(1:numcols, col=palette, horiz = T)
barplot(1:numcols, col=palette, horiz = T, border = F)
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(1:numcols, col=palette, horiz = T, border = F)
palette <- colorRampPalette(c("blue", "white", "red"))(numcols)
barplot(1:numcols, col=palette, horiz = T, border = F)
barplot(1:numcols, col=palette, horiz = F, border = F)
barplot(rep(1,numcols), col=palette, horiz = F, border = F)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, width = 1)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, width = 2)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
numcols<-99
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
barplot(rep(1,3), col=palette, horiz = T, border = F, space = F)
rep(1,3)
barplot(rep(1,3),col=c("black", "red", "yellow"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("black", "red", "yellow"), horiz = T, border = F, space = F)
b
barplot(rep(1,3),col=rev(c("black", "red", "yellow")), horiz = T, border = F, space = F)
numcols<-99
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow", "red", "black"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow2", "red", "black"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow3", "red", "black"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow3", "red4", "black"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow4", "red4", "black"), horiz = T, border = F, space = F)
numcols<-99
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
numcols<-100
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
palette <- colorRampPalette(c("blue", "white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F)
palette <- colorRampPalette(c("blue", "white", "white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F)
palette <- colorRampPalette(c("blue", "white", "white","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F)
palette <- colorRampPalette(c("blue", "white","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F, yaxt="n")
numcols<-100
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F, xaxt=F)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F, xaxt="n")
barplot(rep(1,3),col=c("yellow4", "red4", "black"), horiz = T, border = F, space = F)
barplot(rep(1,3),col=c("yellow4", "red4", "black"), horiz = T, border = F, space = F, xaxt="n")
numcols<-100
palette <- colorRampPalette(c("black", "red", "yellow"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F, xaxt="n")
palette <- colorRampPalette(c("yellow", "red", "black"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F, xaxt="n")
palette <- colorRampPalette(c("blue", "white","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F, yaxt="n")
palette <- colorRampPalette(c("blue", "white", "white","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F, yaxt="n")
palette <- colorRampPalette(c("blue", "white", "grey","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F, yaxt="n")
palette <- colorRampPalette(c("blue", "white","white", "red"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = F, border = F, space = F, yaxt="n")
# Generate some data
set.seed(133)
df <- data.frame(xval=rnorm(50), yval=rnorm(50))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
df <- data.frame(xval=rnorm(500), yval=rnorm(500))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
# Generate some data
set.seed(133)
df <- data.frame(xval=rnorm(5000), yval=rnorm(5000))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
df <- data.frame(xval=rnorm(10000), yval=rnorm(10000))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
df <- data.frame(xval=rnorm(10000), yval=rnorm(10000))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
ggplot(df, aes(x=xval, y=yval, colour=yval, alpha=.2)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
ggplot(df, aes(x=xval, y=yval, colour=yval, alpha=.3)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
df <- data.frame(xval=rnorm(10^5),yval=rnorm(10^5))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval, alpha=.3)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
df <- data.frame(xval=rnorm(10^4),yval=rnorm(10^4))
# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval, alpha=.3)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
ggplot(df, aes(x=xval, y=yval, colour=yval, alpha=.1)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
display.brewer.pal(7,"BrBG")
library(RColorBrewer)
display.brewer.pal(7,"BrBG")
brewer.pal(7,"Accent")
brewer.pal(7,"BrBG")
display.brewer.all()
display.brewer.all()
display.brewer.pal(7,"BrBG")
display.brewer.pal(50,"BrBG")
display.brewer.pal(3,"BrBG")
display.brewer.pal(10,"BrBG")
display.brewer.all()
palette<-rainbow(10)
palette<-greens(10)
numcols<-100
palette <- colorRampPalette(c("yellow", "red", "black"))(numcols)
barplot(rep(1,numcols), col=palette, horiz = T, border = F, space = F, xaxt="n")
